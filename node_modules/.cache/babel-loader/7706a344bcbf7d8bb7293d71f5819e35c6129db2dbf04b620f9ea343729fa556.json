{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BZM\\\\Desktop\\\\Fayek\\\\XALIAN-RTK\\\\src\\\\features\\\\counter\\\\Counter.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\nimport styles from \"./Counter.module.css\";\nimport { decrement, increment, incrementAsync, incrementByAmount, incrementIfOdd, selectCount } from \"./counterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n  const incrementValue = Number(incrementAmount) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Decrement value\",\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.value,\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Increment value\",\n        onClick: () => dispatch(increment()),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementByAmount(incrementValue)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.asyncButton,\n        onClick: () => dispatch(incrementAsync(incrementValue)),\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementIfOdd(incrementValue)),\n        children: \"Add If Odd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"T4Fw5Zo8MCSnIkm4Fc+OTXSVxTY=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","useAppDispatch","useAppSelector","styles","decrement","increment","incrementAsync","incrementByAmount","incrementIfOdd","selectCount","Counter","count","dispatch","incrementAmount","setIncrementAmount","incrementValue","Number","row","button","value","textbox","e","target","asyncButton"],"sources":["C:/Users/BZM/Desktop/Fayek/XALIAN-RTK/src/features/counter/Counter.tsx"],"sourcesContent":["import { useState } from \"react\"\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\"\r\nimport styles from \"./Counter.module.css\"\r\nimport {\r\n  decrement,\r\n  increment,\r\n  incrementAsync,\r\n  incrementByAmount,\r\n  incrementIfOdd,\r\n  selectCount,\r\n} from \"./counterSlice\"\r\n\r\nexport function Counter() {\r\n  const count = useAppSelector(selectCount)\r\n  const dispatch = useAppDispatch()\r\n  const [incrementAmount, setIncrementAmount] = useState(\"2\")\r\n\r\n  const incrementValue = Number(incrementAmount) || 0\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row}>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Decrement value\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          -\r\n        </button>\r\n        <span className={styles.value}>{count}</span>\r\n        <button\r\n          className={styles.button}\r\n          aria-label=\"Increment value\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n      <div className={styles.row}>\r\n        <input\r\n          className={styles.textbox}\r\n          aria-label=\"Set increment amount\"\r\n          value={incrementAmount}\r\n          onChange={(e) => setIncrementAmount(e.target.value)}\r\n        />\r\n        <button\r\n          className={styles.button}\r\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\r\n        >\r\n          Add Amount\r\n        </button>\r\n        <button\r\n          className={styles.asyncButton}\r\n          onClick={() => dispatch(incrementAsync(incrementValue))}\r\n        >\r\n          Add Async\r\n        </button>\r\n        <button\r\n          className={styles.button}\r\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\r\n        >\r\n          Add If Odd\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAChE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SACEC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,iBAAiB,EACjBC,cAAc,EACdC,WAAW,QACN,gBAAgB;AAAA;AAEvB,OAAO,SAASC,OAAO,GAAG;EAAA;EACxB,MAAMC,KAAK,GAAGT,cAAc,CAACO,WAAW,CAAC;EACzC,MAAMG,QAAQ,GAAGX,cAAc,EAAE;EACjC,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC;EAE3D,MAAMe,cAAc,GAAGC,MAAM,CAACH,eAAe,CAAC,IAAI,CAAC;EAEnD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAEV,MAAM,CAACc,GAAI;MAAA,wBACzB;QACE,SAAS,EAAEd,MAAM,CAACe,MAAO;QACzB,cAAW,iBAAiB;QAC5B,OAAO,EAAE,MAAMN,QAAQ,CAACR,SAAS,EAAE,CAAE;QAAA,UACtC;MAED;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAM,SAAS,EAAED,MAAM,CAACgB,KAAM;QAAA,UAAER;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7C;QACE,SAAS,EAAER,MAAM,CAACe,MAAO;QACzB,cAAW,iBAAiB;QAC5B,OAAO,EAAE,MAAMN,QAAQ,CAACP,SAAS,EAAE,CAAE;QAAA,UACtC;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAEF,MAAM,CAACc,GAAI;MAAA,wBACzB;QACE,SAAS,EAAEd,MAAM,CAACiB,OAAQ;QAC1B,cAAW,sBAAsB;QACjC,KAAK,EAAEP,eAAgB;QACvB,QAAQ,EAAGQ,CAAC,IAAKP,kBAAkB,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACpD,eACF;QACE,SAAS,EAAEhB,MAAM,CAACe,MAAO;QACzB,OAAO,EAAE,MAAMN,QAAQ,CAACL,iBAAiB,CAACQ,cAAc,CAAC,CAAE;QAAA,UAC5D;MAED;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QACE,SAAS,EAAEZ,MAAM,CAACoB,WAAY;QAC9B,OAAO,EAAE,MAAMX,QAAQ,CAACN,cAAc,CAACS,cAAc,CAAC,CAAE;QAAA,UACzD;MAED;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QACE,SAAS,EAAEZ,MAAM,CAACe,MAAO;QACzB,OAAO,EAAE,MAAMN,QAAQ,CAACJ,cAAc,CAACO,cAAc,CAAC,CAAE;QAAA,UACzD;MAED;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtDeL,OAAO;EAAA,QACPR,cAAc,EACXD,cAAc;AAAA;AAAA,KAFjBS,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}